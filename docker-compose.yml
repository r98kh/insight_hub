
services:
  postgres:
    image: postgres:15
    container_name: insight_hub_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: insight_hub_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build: .
    container_name: insight_hub_backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src:/app
      - ./backups:/backups
      - ./data:/data
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  celery_worker:
    build: .
    container_name: insight_hub_celery_worker
    command: celery -A insight_hub worker --loglevel=info
    volumes:
      - ./src:/app
      - ./backups:/backups
      - ./data:/data
    depends_on:
      - postgres
      - redis
    env_file:
      - .env


  celery_beat:
    build: .
    container_name: insight_hub_celery_beat
    command: celery -A insight_hub beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./src:/app
      - ./backups:/backups
      - ./data:/data
    depends_on:
      - postgres
      - redis
    env_file:
      - .env


volumes:
  postgres_data:
  redis_data:
